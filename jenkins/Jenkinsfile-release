pipeline {
    agent {label 'master'}

    environment {
        SPARK_VERSION="2.2.0"
        BRANCH_DIR="/builds2/sparkling-water/${BRANCH_NAME}"
        BUILD_NUMBER_DIR="${BRANCH_DIR}/${BUILD_NUMBER}"
        LOG_FILE="${BUILD_NUMBER_DIR}/log.txt"
        SPARK_HOME="${env.WORKSPACE}/spark"
        JAVA_HOME="${JAVA_HOME_8}"
        PATH="${JAVA_HOME_8}/bin:${PATH}"
        ZERO_BASED_BUILD_NUMBER="true"
    }

    stages {
        stage('Download Spark') {
            steps {
                sh """
                    # Download Spark
                    wget -q "http://d3kbcqa49mib13.cloudfront.net/spark-${env.SPARK_VERSION}-bin-hadoop2.7.tgz"
                    mkdir -p "${env.SPARK_HOME}"
                    tar zxvf spark-${env.SPARK_VERSION}-bin-hadoop2.7.tgz -C "${env.SPARK_HOME}" --strip-components 1
                    rm -rf spark-${env.SPARK_VERSION}-bin-hadoop2.7.tgz
               """
            }
        }

        stage('Prepare Environment') {
            steps {
                sh """
                    # Log commands.
                    set -x
                    # Stop on error.
                    set -e
                    
                    # Transform build number to start with 0
                    if [ -n "$ZERO_BASED_BUILD_NUMBER" ]; then
                        BUILD_NUMBER="\$(( $BUILD_NUMBER - 1 ))"
                    fi
                    
                    mkdir -p ${BUILD_NUMBER_DIR}
                    # Do everything in the job directory.  Ignore the standard jenkins workspace.
                    cd ${BUILD_NUMBER_DIR}

                    # Log some stuff for debug purposes.
                    date
                    pwd
                    env
                    echo $PATH
                    which java
                    java -version
                  
                    """
            }
        }
        stage('Clone the repo'){
            steps{
                dir("${env.BUILD_NUMBER_DIR}") {
                    checkout scm

                    sh 'du -h'

                    sh """

                        # Update the build number
                        mkdir -p ci
                        echo "BUILD_NUMBER=${BUILD_NUMBER}" > ci/buildnumber.properties
                        echo "BUILD_BRANCH_NAME=${BRANCH_NAME}" > ci/git.properties
                        echo "BUILD_HASH=\$(git rev-parse --verify HEAD)" >> ci/git.properties
                        echo "BUILD_HASH_SHORT=\$(git describe --always)" >> ci/git.properties

                        echo
                        echo "BUILD PROPERTIES"
                        echo
                        
                        echo "ci/buildnumber.properties"
                        cat ci/buildnumber.properties
                        
                        echo "ci/git.properties"
                        cat ci/git.properties
                        """
                }
            }
        }
    }
}